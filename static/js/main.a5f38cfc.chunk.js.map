{"version":3,"sources":["sortingAlgorithms/sortingAlgorithms.js","SortingVisualizer/SortingVisualizer.jsx","App.js","reportWebVitals.js","index.js"],"names":["getMergeSortAnimation","array","animations","length","auxiliaryArray","slice","mergeSortHelper","mainArray","startInd","endInd","middleInd","Math","floor","k","i","j","push","doMerge","getQuickSortAnimation","quickSortHelper","arr","piv","pivot","temp","partition","getHeapSortAnimation","n","heapify","heapSortHelper","largest","l","r","ARRAY_SIZE","window","innerWidth","ARRAY_HEIGHT","innerHeight","ARRAY_WIDTH","min","MAX_SIZE","SortingVisualizer","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isButtonDisabled","addEventListener","resize","bind","resetArray","random","setState","_this2","disable","_loop","arrayBars","document","getElementsByClassName","_animations$i","slicedToArray","barOneInd","barTwoInd","barOneStyle","style","barTwoStyle","color","setTimeout","backgroundColor","_animations$i2","newHeight","height","concat","_this3","_loop2","_animations$i3","cond","clr","_this4","_loop3","_animations$i4","_this5","bubbleSortHelper","getBubbleSortAnimation","_loop4","_animations$i5","getElementById","disabled","_this6","react_default","a","createElement","className","width","map","value","ind","key","onClick","id","mergeSort","qucikSort","heapSort","bubbleSort","Box","Slider","defaultValue","max","aria-label","valueLabelDisplay","onChange","event","newValue","React","Component","App","SortingVisualizer_SortingVisualizer_SortingVisualizer","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.a5f38cfc.chunk.js","sourcesContent":["\r\nexport function getMergeSortAnimation(array){\r\n    const animations =[];\r\n    if(array.length<=1)return array;\r\n    const auxiliaryArray =array.slice();\r\n    mergeSortHelper(array,0,array.length-1,auxiliaryArray,animations);\r\n    return animations;\r\n}\r\n\r\nfunction mergeSortHelper(\r\n    mainArray,\r\n    startInd,\r\n    endInd,\r\n    auxiliaryArray,\r\n    animations,){\r\n        if(startInd===endInd) return;\r\n        const middleInd = Math.floor((startInd+endInd)/2);\r\n        mergeSortHelper(auxiliaryArray,startInd,middleInd,mainArray,animations);\r\n        mergeSortHelper(auxiliaryArray,middleInd+1,endInd,mainArray,animations);\r\n        doMerge(mainArray,startInd,middleInd,endInd,auxiliaryArray,animations);\r\n}\r\n\r\nfunction doMerge(\r\n    mainArray,\r\n    startInd,\r\n    middleInd,\r\n    endInd,\r\n    auxiliaryArray,\r\n    animations,\r\n){\r\n    let k = startInd;\r\n    let i = startInd;\r\n    let j = middleInd+1;\r\n    while(i<=middleInd && j <= endInd){\r\n        animations.push([i,j]);\r\n        animations.push([i,j]);\r\n        if(auxiliaryArray[i] <=auxiliaryArray[j]){\r\n            animations.push([k,auxiliaryArray[i]]);\r\n            mainArray[k++]=auxiliaryArray[i++];\r\n        }\r\n        else{\r\n            animations.push([k,auxiliaryArray[j]]);\r\n            mainArray[k++]=auxiliaryArray[j++];\r\n        }\r\n    }\r\n    while(i<=middleInd){\r\n        animations.push([i,i]);\r\n        animations.push([i,i]);\r\n        animations.push([k,auxiliaryArray[i]]);\r\n\r\n        mainArray[k++]=auxiliaryArray[i++];\r\n    }\r\n    while(j<=endInd){\r\n        animations.push([j,j]);\r\n        animations.push([j,j]);\r\n        animations.push([k,auxiliaryArray[j]]);\r\n\r\n        mainArray[k++]=auxiliaryArray[j++];\r\n    }\r\n}\r\n\r\n//--------bubble sort\r\nexport function getBubbleSortAnimation(array){\r\n    const animations =[];\r\n    bubbleSortHelper(array,0,array.length-1,animations);\r\n    return animations;\r\n}\r\n\r\nfunction bubbleSortHelper(\r\n    arr,\r\n    startInd,\r\n    endInd,\r\n    animations,){\r\n        for(let i=startInd;i<endInd;i++)\r\n        {\r\n            for(let j=startInd;j<endInd-i;j++)\r\n            {\r\n            animations.push([0,j,j+1]);\r\n            animations.push([0,j,j+1]);\r\n                if(arr[j]>arr[j+1])\r\n                {\r\n                    animations.push([1,j,arr[j+1]]);\r\n                    animations.push([1,j+1,arr[j]]);\r\n                    let temp=arr[j];\r\n                    arr[j]=arr[j+1];\r\n                    arr[j+1]=temp;\r\n                }\r\n            }\r\n        }\r\n}\r\n//-----quick sort\r\nexport function getQuickSortAnimation(array){\r\n    const animations =[];\r\n    quickSortHelper(array,0,array.length-1,animations);\r\n    return animations;\r\n\r\n}\r\nfunction quickSortHelper(\r\n    arr,\r\n    startInd,\r\n    endInd,\r\n    animations,){\r\n        if(startInd < endInd)\r\n        {\r\n            let piv = partition(arr,startInd,endInd,animations);\r\n            quickSortHelper(arr,startInd,piv-1,animations);\r\n            quickSortHelper(arr,piv+1,endInd,animations);\r\n        }\r\n}\r\nfunction partition(\r\n    arr,\r\n    startInd,\r\n    endInd,\r\n    animations,\r\n){\r\n    let pivot = arr[endInd];\r\n    animations.push([0,endInd,1]);\r\n    let i = (startInd-1);\r\n    for(let j = startInd;j<=endInd-1;j++)\r\n    {\r\n        animations.push([0,j,1]);\r\n        animations.push([0,j,0]);\r\n        if(arr[j]<pivot)\r\n        {\r\n            i++;\r\n            animations.push([1,i,arr[j]]);\r\n            animations.push([1,j,arr[i]]);\r\n            let temp=arr[i];\r\n            arr[i]=arr[j];\r\n            arr[j]=temp;\r\n        }\r\n    }\r\n    animations.push([1,i+1,arr[endInd]]);\r\n    animations.push([1,endInd,arr[i+1]]);\r\n    let temp=arr[i+1];\r\n    arr[i+1]=arr[endInd];\r\n    arr[endInd]=temp;\r\n    animations.push([0,endInd,0]);\r\n    return i+1;\r\n}\r\n\r\n//------heap\r\n\r\nexport function getHeapSortAnimation(array){\r\n    const animations =[];\r\n    heapSortHelper(array,array.length,animations);\r\n    return animations;\r\n\r\n}\r\nfunction heapSortHelper(\r\n    arr,\r\n    n,\r\n    animations,){\r\n        for(let i=n/2-1;i>=0;i--)\r\n        {\r\n            heapify(arr,n,i,animations);\r\n        }\r\n        for(let i =n-1;i>0;i--)\r\n        {\r\n            animations.push([1,0,arr[i]]);\r\n            animations.push([1,i,arr[0]]);\r\n            let temp=arr[0];\r\n            arr[0]=arr[i];\r\n            arr[i]=temp;\r\n            heapify(arr,i,0,animations);\r\n        }\r\n}\r\nfunction heapify(\r\n    arr,\r\n    n,\r\n    i,\r\n    animations,\r\n){\r\n    let largest = i; \r\n    let  l = 2 * i + 1; \r\n    let r = 2 * i + 2; \r\n    if(l>=n || r>=n)\r\n    return;\r\n      if (l < n && arr[l] > arr[largest])\r\n          largest = l;\r\n      if (r < n && arr[r] > arr[largest])\r\n          largest = r;\r\n    animations.push([0,i,1]);\r\n    animations.push([0,l,1]);\r\n    animations.push([0,r,1]);\r\n    animations.push([0,i,0]);\r\n    animations.push([0,l,0]);\r\n    animations.push([0,r,0]);\r\n      if (largest !== i) {\r\n          animations.push([1,i,arr[largest]]);\r\n          animations.push([1,largest,arr[i]]);\r\n        \r\n          let temp=arr[i];\r\n          arr[i]=arr[largest];\r\n          arr[largest]=temp;\r\n\r\n          heapify(arr, n, largest,animations);\r\n      }\r\n}","import React from \"react\";\r\nimport  {getMergeSortAnimation} from '../sortingAlgorithms/sortingAlgorithms.js'\r\nimport  {getBubbleSortAnimation} from '../sortingAlgorithms/sortingAlgorithms.js'\r\nimport  {getQuickSortAnimation} from '../sortingAlgorithms/sortingAlgorithms.js'\r\nimport  {getHeapSortAnimation} from '../sortingAlgorithms/sortingAlgorithms.js'\r\nimport './SortingVisualizer.css';\r\nimport Box from '@mui/material/Box';\r\nimport Slider from '@mui/material/Slider';\r\n\r\nconst ANIMATION_SPEED_MS = 70;\r\nlet ARRAY_SIZE = window.innerWidth <1000 ? 20:40;\r\nconst ARRAY_HEIGHT = window.innerHeight/2;\r\nlet ARRAY_WIDTH = Math.min(800,window.innerWidth/3)/(ARRAY_SIZE+1);\r\n\r\nconst PRIMARY_COLOR = 'turquoise';\r\nconst SECONDARY_COLOR = 'red';\r\n//----array sizee range\r\nlet MIN_SIZE = 10\r\nlet MAX_SIZE = window.innerWidth <1000 ? 60:80;\r\n\r\nexport default class SortingVisualizer extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            array: [],\r\n            isButtonDisabled: false,\r\n        };\r\n    }\r\n    componentDidMount(){\r\n        window.addEventListener(\"resize\", this.resize.bind(this));\r\n        this.resize();\r\n        this.resetArray();\r\n    }\r\n    resize() {\r\n        if(window.innerWidth <1000)\r\n        {            \r\n            MAX_SIZE = 40;\r\n            ARRAY_SIZE =20;\r\n        }\r\n        else\r\n        {\r\n            MAX_SIZE = 60;\r\n            ARRAY_SIZE = 40;\r\n        }\r\n        ARRAY_WIDTH = Math.min(800,window.innerWidth/3)/(ARRAY_SIZE+1);\r\n    }\r\n    resetArray(){\r\n        const array=[];\r\n        for(let i=0;i<ARRAY_SIZE;i++)\r\n        {\r\n            array.push(Math.floor(Math.random()*(ARRAY_HEIGHT-5+1)+5));\r\n        }\r\n        this.setState({array: array});\r\n    }\r\n    mergeSort() {\r\n        this.disable(true);\r\n        const animations=getMergeSortAnimation(this.state.array);\r\n        for(let i=0;i<animations.length;i++)\r\n        {\r\n            const arrayBars = document.getElementsByClassName('array-bar');\r\n            const isColorChange = i%3 !== 2;\r\n            if(isColorChange)\r\n            {\r\n                const [barOneInd,barTwoInd] = animations[i];\r\n                const barOneStyle = arrayBars[barOneInd].style;\r\n                const barTwoStyle = arrayBars[barTwoInd].style;\r\n                const color = i%3===0?'red': 'turquoise';\r\n                setTimeout(() => {\r\n                    barOneStyle.backgroundColor = color;\r\n                    barTwoStyle.backgroundColor = color;\r\n                },i* ANIMATION_SPEED_MS);\r\n            }\r\n            else\r\n            {\r\n                setTimeout(() => {\r\n                const [barOneInd,newHeight] = animations[i];\r\n                const barOneStyle = arrayBars[barOneInd].style;\r\n                barOneStyle.height =`${newHeight}px`;\r\n                },i*ANIMATION_SPEED_MS);\r\n            }\r\n        }\r\n        \r\n        setTimeout(() => {\r\n            this.disable(false);\r\n            },animations.length * ANIMATION_SPEED_MS);\r\n    }\r\n    qucikSort() {\r\n        \r\n        this.disable(true);\r\n        const animations=getQuickSortAnimation(this.state.array);\r\n        for(let i=0;i<animations.length;i++)\r\n        {\r\n            const arrayBars = document.getElementsByClassName('array-bar');\r\n            const [cond,barOneInd,clr] = animations[i];\r\n            const isColorChange = cond===0;\r\n            if(isColorChange)\r\n            {\r\n                const barOneStyle = arrayBars[barOneInd].style;\r\n                const color = clr === 1 ?'red': 'turquoise';\r\n                setTimeout(() => {\r\n                    barOneStyle.backgroundColor = color;\r\n                },i* ANIMATION_SPEED_MS);\r\n            }\r\n            else\r\n            {\r\n                setTimeout(() => {\r\n                const barOneStyle = arrayBars[barOneInd].style;\r\n                barOneStyle.height =`${clr}px`;\r\n                },i*ANIMATION_SPEED_MS);\r\n            }\r\n        }\r\n        \r\n        setTimeout(() => {\r\n            this.disable(false);\r\n            },animations.length * ANIMATION_SPEED_MS);\r\n    }\r\n    heapSort() {\r\n        \r\n        this.disable(true);\r\n        const animations=getHeapSortAnimation(this.state.array);\r\n        for(let i=0;i<animations.length;i++)\r\n        {\r\n            const arrayBars = document.getElementsByClassName('array-bar');\r\n            const [cond,barOneInd,clr] = animations[i];\r\n            const isColorChange = cond===0;\r\n            if(isColorChange)\r\n            {\r\n                const barOneStyle = arrayBars[barOneInd].style;\r\n                const color = clr === 1 ?'red': 'turquoise';\r\n                setTimeout(() => {\r\n                    barOneStyle.backgroundColor = color;\r\n                },i* ANIMATION_SPEED_MS);\r\n            }\r\n            else\r\n            {\r\n                setTimeout(() => {\r\n                const barOneStyle = arrayBars[barOneInd].style;\r\n                barOneStyle.height =`${clr}px`;\r\n                },i*ANIMATION_SPEED_MS);\r\n            }\r\n        }\r\n        \r\n        setTimeout(() => {\r\n            this.disable(false);\r\n            },animations.length * ANIMATION_SPEED_MS);\r\n\r\n    }\r\n    bubbleSort() {\r\n        \r\n        this.disable(true);\r\n        const animations=getBubbleSortAnimation(this.state.array);\r\n        for(let i=0;i<animations.length;i++)\r\n        {\r\n            const arrayBars = document.getElementsByClassName('array-bar');\r\n            const [cond,barOneInd,barTwoInd] = animations[i];\r\n            const isColorChange = cond===0;\r\n            if(isColorChange)\r\n            {\r\n                const barOneStyle = arrayBars[barOneInd].style;\r\n                const barTwoStyle = arrayBars[barTwoInd].style;\r\n                const color = i%2 === 0 ?'red': 'turquoise';\r\n                setTimeout(() => {\r\n                    barOneStyle.backgroundColor = color;\r\n                    barTwoStyle.backgroundColor = color;\r\n                },i* ANIMATION_SPEED_MS);\r\n            }\r\n            else\r\n            {\r\n                setTimeout(() => {\r\n                const barOneStyle = arrayBars[barOneInd].style;\r\n                barOneStyle.height =`${barTwoInd}px`;\r\n                },i*ANIMATION_SPEED_MS);\r\n            }\r\n        }\r\n        \r\n        setTimeout(() => {\r\n            this.disable(false);\r\n            },animations.length * ANIMATION_SPEED_MS);\r\n    }\r\n    \r\ndisable(cond){\r\n    document.getElementById(\"gen-button\").disabled = cond;\r\n    document.getElementById(\"merge-button\").disabled = cond;\r\n    document.getElementById(\"quck-button\").disabled = cond;\r\n    document.getElementById(\"heap-button\").disabled = cond;\r\n    document.getElementById(\"bubble-button\").disabled = cond;\r\n}\r\n    render(){\r\n        const {array} = this.state;\r\n        const handleChange = (event, newValue) => {\r\n            ARRAY_SIZE=newValue;\r\n            ARRAY_WIDTH = Math.min(800,window.innerWidth/3)/(ARRAY_SIZE+1);\r\n        };\r\n        return (\r\n        <div className=\"main-page\" style={{ width: `${ARRAY_WIDTH*ARRAY_SIZE*2}px`}}>\r\n            <div className=\"array-container\" style={{ width: `${ARRAY_WIDTH*ARRAY_SIZE*2}px`, height: `${ARRAY_HEIGHT}px`}}>\r\n            {array.map((value,ind)=>(\r\n                    <div className=\"array-bar\" key={ind} style={{\r\n                        backgroundColor: 'turquoise', width: `${ARRAY_WIDTH}px` ,height: `${value}px`}}></div>\r\n            ))}\r\n            <div className=\"imaginary-bar\" style={{\r\n                width: `${ARRAY_WIDTH}px` ,height: `${ARRAY_HEIGHT}px`}}></div>\r\n            </div>\r\n            <div className=\"Buttons\">\r\n            <button onClick={()=> this.resetArray() }  className= \"button-18\" id=\"gen-button\">Generate Array</button>\r\n            <button onClick={()=> this.mergeSort() }  className= \"button-18\" id = \"merge-button\">Merge Sort</button>\r\n            <button onClick={()=> this.qucikSort()}  className= \"button-18\" id = \"quck-button\">Quick Sort</button>\r\n            <button onClick={()=> this.heapSort()}  className= \"button-18\" id = \"heap-button\">Heap Sort</button>\r\n            <button onClick={()=> this.bubbleSort()}  className= \"button-18\" id=\"bubble-button\">Bubble Sort</button>\r\n            </div>\r\n            <div>\r\n            <Box width={100}  className = \"sliders\">\r\n                <Slider defaultValue={ARRAY_SIZE} min = {MIN_SIZE} max={MAX_SIZE} aria-label=\"Default\" valueLabelDisplay=\"auto\" onChange ={handleChange}/>\r\n            </Box>\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n}","\nimport './App.css';\nimport React from 'react';\nimport SortingVisualizer from './SortingVisualizer/SortingVisualizer';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SortingVisualizer></SortingVisualizer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}